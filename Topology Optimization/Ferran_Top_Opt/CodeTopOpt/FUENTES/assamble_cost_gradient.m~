function [fobj,gradient] = assamble_cost_gradient(compliance,gradient_compliance,constraint_volume,gradient_constraint_volume,...
                                                    constraint_Perimeter,gradient_constraint_Perimeter,...
                                                    lambda_volume,penalty_volume,lambda_Perimeter,penalty_Perimeter)

cost_volume = lambda_volume*constraint_volume + 0.5*penalty_volume*constraint_volume^2;
cost_Perimeter = lambda_volume*constraint_Perimeter + 0.5*penalty_Perimeter*constraint_Perimeter^2;




fobj = compliance + lambda_volume*constraint_volume + 0.5*penalty_volume*constraint_volume^2;
gradient = gradient_compliance + lambda_volume*gradient_constraint_volume + penalty_volume*constraint_volume*gradient_constraint_volume;
end